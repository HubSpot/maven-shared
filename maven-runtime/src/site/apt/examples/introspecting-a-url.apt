 ------
 Introspecting a URL
 ------
 Mark Hobson
 <markh@apache.org>
 ------
 2 Nov 2009
 ------

 ~~ Licensed to the Apache Software Foundation (ASF) under one
 ~~ or more contributor license agreements.  See the NOTICE file
 ~~ distributed with this work for additional information
 ~~ regarding copyright ownership.  The ASF licenses this file
 ~~ to you under the Apache License, Version 2.0 (the
 ~~ "License"); you may not use this file except in compliance
 ~~ with the License.  You may obtain a copy of the License at
 ~~
 ~~   http://www.apache.org/licenses/LICENSE-2.0
 ~~
 ~~ Unless required by applicable law or agreed to in writing,
 ~~ software distributed under the License is distributed on an
 ~~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~~ KIND, either express or implied.  See the License for the
 ~~ specific language governing permissions and limitations
 ~~ under the License.

 ~~ NOTE: For help with the syntax of this file, see:
 ~~ http://maven.apache.org/doxia/references/apt-format.html

Introspecting a URL

 Maven Runtime can introspect a URL to obtain metadata for each Maven project accessible within it.
 
* Using project properties

 To obtain a list of
 <<<{{{../apidocs/org/apache/maven/shared/runtime/MavenProjectProperties.html}MavenProjectProperties}}>>>
 instances for each Maven project accessible within a specified URL:

---
/**
 * @component
 */
private MavenRuntime runtime;

public void processProjects() throws MavenRuntimeException
{
    List<MavenProjectProperties> projects = runtime.getProjectsProperties( myUrl );
    
    // process projects
}
---

* Using project XML

 To obtain a list of
 <<<{{{http://maven.apache.org/ref/3.0.4/maven-core/apidocs/org/apache/maven/project/MavenProject.html}MavenProject}}>>>
 instances for each Maven project accessible within a specified URL:

---
/**
 * @component
 */
private MavenRuntime runtime;

public void processProjects() throws MavenRuntimeException
{
    List<MavenProject> projects = runtime.getProjects( myUrl );
    
    // process projects
}
---
